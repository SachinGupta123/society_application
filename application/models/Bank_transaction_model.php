<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Bank_transaction_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }
    
    /*
     * Get bank_transaction by id
     */
    function get_bank_transaction($id)
    {
        return $this->db->get_where('bank_transactions',array('id'=>$id))->row_array();
    }

    public function transaction_entry($amount, $society_id, $bank_id, $paid_by, $payment_date)
    {
        // echo "<pre>";print_r($amount);die;
        $society_id = $society_id;
        $society = $this->Society_model->get_society_details($society_id);
        $paid_by = $paid_by;
        $bank_id = $bank_id;
        $amount = $amount;
        $payment_date = $payment_date;

        //for checking last transaction of bank/cash
        if($paid_by == 'cash'):
            $last_transaction = $this->Bank_transaction_model->get_transaction_by_society($society_id);
            $last_transact_balance = $last_transaction['balance'];
        else:
            $last_transaction = $this->Bank_transaction_model->get_transaction_by_bank($bank_id);
            $last_transact_balance = $last_transaction['balance'];
        endif;

        //creating bank transaction on payment.save and putting credit amount,is_cash,narration,society_id,date with reference from payment entry
        $params['credit'] = $amount;
        if($paid_by == 'cash'):
            $params['is_cash'] = 1;
            $params['narration'] = "cash transaction";
            $params['balance'] = $last_transact_balance + $amount;
        elseif($paid_by == 'cheque'):
            $params['is_cash'] = 0;
            $params['narration'] = "cheque transaction";
            $params['bank_id'] = $bank_id;
            $params['balance'] = $last_transact_balance + $amount;
        elseif($paid_by == 'neft'):
            $params['is_cash'] = 0;
            $params['narration'] = "neft transaction";
            $params['bank_id'] = $bank_id;
            $params['balance'] = $last_transact_balance + $amount;
        endif;

        $params['society_id'] = $society_id;
        $params['date'] = $payment_date;
        $transaction = $this->Bank_transaction_model->add_bank_transaction($params);

        redirect('member/manage'.'/'.$society_id);
    }

    function get_transaction_by_society($id)
    {
        $this->db->where('society_id', $id);
        $this->db->where('is_cash', '1');
        $this->db->order_by('id', 'desc');
        $this->db->limit(1);
        return $this->db->get('bank_transactions')->result_array();
    }

    function get_all_transaction_by_society($id)
    {
        $this->db->where('society_id', $id);
        $this->db->where('is_cash', '1');
        // $this->db->order_by('id', 'desc');
        $this->db->order_by('bank_transactions.date','DESC');  
        // $this->db->limit(1);
        return $this->db->get('bank_transactions')->result_array();
    }
    
    function get_transaction_by_bank($id)
    {
        $this->db->where('bank_id', $id);
        $this->db->where('is_cash', 0);
        $this->db->order_by('id', 'desc');
        $this->db->limit(1);
        return $this->db->get('bank_transactions')->result_array();
    }

    function get_transaction_by_bank_arrear_society($bank_id, $society_id)
    {
        $this->db->where('bank_id', $bank_id);
        $this->db->where('society_id', $society_id);
        $this->db->where('is_arrears', 0);
        $this->db->where('is_cash', 0);
        $this->db->order_by('id', 'desc');
        $this->db->limit(1);
        return $this->db->get('bank_transactions')->result_array();
    }

    function get_transaction_by_bank_society($bank_id, $society_id)
    {
        $this->db->where('bank_id', $bank_id);
        $this->db->where('society_id', $society_id);
        $this->db->where('is_cash', 0);//add condition for get bank tansaction data not cash transaction data -17-03-2022
        $this->db->order_by('id', 'desc');
        $this->db->limit(1);
        return $this->db->get('bank_transactions')->result_array();
    }        
    /*
     * Get all bank_transactions
     */
    function get_all_bank_transactions($bank_id, $society_id)
    {
        // $this->db->select('id, date, narration, credit, debit, balance');
        $this->db->where('bank_id', $bank_id);
        $this->db->where('society_id', $society_id);
        $this->db->where('is_cash', 0);
        $this->db->where('is_arrears', 0);
        // $this->db->order_by('id');
        $this->db->order_by('date', 'desc');
        return $this->db->get('bank_transactions')->result_array();
    }

    function bank_transactions_society($society_id,$bank_id)
    {
        // $this->db->select('id, date, narration, credit, debit, balance');
        $this->db->join('banks', 'banks.id = bank_transactions.bank_id');
        $this->db->where('bank_transactions.society_id', $society_id);
        $this->db->where('bank_transactions.is_cash', 0);
        $this->db->where('bank_transactions.is_arrears', 0);
        $this->db->where('bank_transactions.bank_id',$bank_id);
        // $this->db->group_by('banks.id');
        // $this->db->order_by('bank_transactions.id');
        $this->db->order_by('bank_transactions.date');
        // $this->db->order_by('bank_transactions.date','DESC');
        return $this->db->get('bank_transactions')->result_array();
    }        
    /*
     * function to add new bank_transaction
     */
    function add_bank_transaction($params)
    {
        $this->db->insert('bank_transactions',$params);
        return $this->db->insert_id();
    }
    
    /*
     * function to update bank_transaction
     */
    function update_bank_transaction($id,$params)
    {
        $this->db->where('id',$id);
        return $this->db->update('bank_transactions',$params);
    }
    
    /*
     * function to delete bank_transaction
     */
    function delete_bank_transaction($id)
    {
        return $this->db->delete('bank_transactions',array('id'=>$id));
    }
    /*
     * function to all bank_transaction by society_id
     */
    function get_all_bank_transaction_by_society_id($id)
    {
        $this->db->where('society_id', $id);
        $this->db->where('is_cash', '0');
        $this->db->order_by('id', 'desc');        
        return $this->db->get('bank_transactions')->result_array();
    }
    /*
     * function to all transaction by society_id
     */
    function get_all_transaction_by_society_id($id)
    {
        $this->db->where('society_id', $id);        
        // $this->db->order_by('id', 'desc'); 
        $this->db->order_by('bank_transactions.date','DESC');       
        return $this->db->get('bank_transactions')->result_array();
    }
}
