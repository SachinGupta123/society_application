<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Expense_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }
    
    /*
     * Get expense by id
     */
    function get_expense($id)
    {
        return $this->db->get_where('expenses',array('id'=>$id))->row_array();
    }

    function expense($society_id)
    {
        $query =  $this->db->query("SELECT id,MONTHNAME('date') as month_name, credit, society_id, member_id FROM payments WHERE society_id = '" . $society_id . "' GROUP BY YEAR('date'),MONTH('date')");
    }
        
    /*
     * Get all expenses
     */
    function get_all_expenses()
    {
        $this->db->order_by('id', 'desc');
        return $this->db->get('expenses')->result_array();
    }

    function get_all_expense($society_id)
    {
        $this->db->select('expenses.* , bank_transactions.date as payment_date');
       
        $this->db->join('bank_transactions', 'bank_transactions.expense_id = expenses.id','left');
        $this->db->where('expenses.society_id', $society_id);
        $this->db->order_by('expenses.date', 'ASC');
        return $this->db->get('expenses')->result_array();
    }

    function get_all_expense1($society_id,$to,$from)
    {
        $this->db->where('society_id', $society_id);
        $this->db->where('date >=', $from);
        $this->db->where('date <=', $to);
        $this->db->order_by('id', 'desc');
        return $this->db->get('expenses')->result_array();
    }

    // function get_all_expense_report($society_id)
    // {
    //     $this->db->join('banks', 'banks.id = expenses.bank_id');
    //     $this->db->where('expenses.society_id', $society_id);
    //     $this->db->order_by('expenses.id', 'desc');
    //     return $this->db->get('expenses')->result_array();
    // }
    
    function get_all_expense_report($society_id)
    {
        $this->db->select('description , expense_category_id, sum(amount) as amount, banks.bank_name, payee, date');
        // $this->db->join('service_providers', 'service_providers.name = expenses.payee');
        $this->db->join('banks', 'banks.id = expenses.bank_id');
        $this->db->where('expenses.society_id', $society_id);
        $this->db->group_by('expense_category_id');
        $this->db->order_by('date', 'desc');
        // $query = "SELECT `description`, `expense_category_id`, sum(amount) as amount, `banks`.`bank_name`, `payee`, `date` FROM msociety_restore.`expenses` LEFT JOIN `banks` ON (`expenses`.`bank_id` IS NOT NULL and `banks`.`id` = `expenses`.`bank_id`) WHERE `expenses`.`society_id` = '.$society_id.' GROUP BY `expense_category_id`";
        // $this->db->order_by('expenses.id', 'desc');
        return $this->db->get('expenses')->result_array();
    }

    function get_all_expense_by_spid($service_provider_id)
    {
        $this->db->where('service_provider_id', $service_provider_id);
        // $this->db->order_by('id', 'desc');
        return $this->db->get('expenses')->result_array();
    }
        
    /*
     * function to add new expense
     */
    function add_expense($params)
    {
        $this->db->insert('expenses',$params);
        return $this->db->insert_id();
    }
    
    /*
     * function to update expense
     */
    function update_expense($id,$params)
    {
        $this->db->where('id',$id);
        return $this->db->update('expenses',$params);
    }
   
    /*
     * function to delete expense
     */
    function delete_expense($id)
    {
        return $this->db->delete('expenses',array('id'=>$id));
    }


    function get_provider($id)
    {
        return $this->db->get_where('service_providers',array('id'=>$id))->row_array();
    }
}
