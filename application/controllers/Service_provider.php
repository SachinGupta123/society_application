<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Service_provider extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        if (!$this->ion_auth->logged_in())
        {
            // redirect them to the login page
            redirect('auth/login', 'refresh');
        }
        $this->load->model('Service_provider_model');
        $this->load->model('Expense_category_model');
        
    } 

    /*
     * Listing of service_providers
     */
    function view_service_provider()
    {
        $data = array(
            'title' => "Societies"
        );
        $society_id = $this->uri->segment(3);
        $data['service_providers'] = $this->Service_provider_model->get_all_service_providers($society_id);
        
        $data['_view'] = 'service_provider/index';
        $this->load->view('societies/service_provider/view_service_provider', $data);
    }

    /*
     * Adding a new service_provider
     */
    function add_service_provider()
    {
        $data = array(
            'title' => "Societies"
        );   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('service_provider_name','Name','required');
		$this->form_validation->set_rules('service_provider_phone','Contact No','required|numeric');
		
		if($this->form_validation->run())     
        {   


            $check_service_provider_id_exit = $this->Service_provider_model->check_exit_service_provider($this->input->post('society_id'),$this->input->post('service_provider_phone'));
            if(!empty($check_service_provider_id_exit)){
                $message['text'] = "Contact Number Already Exit";
                $message['status'] = "Fail";
                $this->session->set_flashdata('message', $message);
                redirect('service_providers/view'.'/'.$this->input->post('society_id'));
            }else{
                $params = array(
                    'society_id' => $this->input->post('society_id'),
                    'name' => $this->input->post('service_provider_name'),
                    'address' => $this->input->post('service_provider_address'),
                    'contact_no' => $this->input->post('service_provider_phone'),
                    'sp_type' => $this->input->post('service_provider_type'),
                    'created_at' => date('Y-m-d H:i:s'),
                    'email' => $this->input->post('service_provider_email'),
                );
                
                if($service_provider_id = $this->Service_provider_model->add_service_provider($params)):
                    $message['text'] = "Service Provider added successfully!!";
                    $message['status'] = "Success";
                    $this->session->set_flashdata('message', $message);
                    redirect('service_providers/view'.'/'.$params['society_id']);
                else:
                    $message['text'] = "Please Check Your Input!!";
                    $message['status'] = "Fail";
                    $this->session->set_flashdata('message', $message);
                    redirect('service_providers/view'.'/'.$params['society_id']);
                endif;
            }
           
        }
        else
        {
			
			$data['expense_categories'] = $this->Expense_category_model->get_all_expense_categories();        
            $data['_view'] = 'service_provider/add';
            $this->load->view('societies/service_provider/add_service_provider', $data);
        }
    }  

    /*
     * Editing a service_provider
     */
    function edit_service_provider($society_id='',$id = '')
    {
        if($id == ''){
            $id = $this->input->post('sp_id');
        }
        $data = array(
            'title' => "Societies"
        );   
        // check if the service_provider exists before trying to edit it
        $data['service_provider'] = $this->Service_provider_model->get_service_provider($id);
        
        if(isset($data['service_provider']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('service_provider_name','Name','required');
			$this->form_validation->set_rules('service_provider_phone','Contact No','required');
			if($this->form_validation->run())     
            {   
               
                $params = array(
					'society_id' => $this->input->post('society_id'),
					'name' => $this->input->post('service_provider_name'),
					'address' => $this->input->post('service_provider_address'),
					'contact_no' => $this->input->post('service_provider_phone'),
					'sp_type' => $this->input->post('service_provider_type'),
					'updated_at' => date('Y-m-d H:m:s'),
					'email' => $this->input->post('service_provider_email'),
                );

                            
                if($this->Service_provider_model->update_service_provider($id,$params)):
                    $message['text'] = "Service Provider updated successfully!!";
                    $message['status'] = "Success";
                    $this->session->set_flashdata('message', $message);
                    redirect('service_providers/view'.'/'.$params['society_id']);
                else:
                    $message['text'] = "Please Check Your Input!!";
                    $message['status'] = "Fail";
                    $this->session->set_flashdata('message', $message);
                    redirect('service_providers/view'.'/'.$params['society_id']);
                endif;
            }
            else
            {
				
                $data['expense_categories'] = $this->Expense_category_model->get_all_expense_categories();
                $data['_view'] = 'service_provider/edit';
                $this->load->view('societies/service_provider/edit_service_provider',$data);
            }
        }
        else
            show_error('The service_provider you are trying to edit does not exist.');
    } 

    /*
     * Deleting service_provider
     */
    function remove($id)
    {
        $service_provider = $this->Service_provider_model->get_service_provider($id);
        $society_id = $this->uri->segment(4);
        // check if the service_provider exists before trying to delete it
        if(isset($service_provider['id']))
        {
            $this->Service_provider_model->delete_service_provider($id);
            redirect('service_providers/view'.'/'.$society_id);
        }
        else
            show_error('The service_provider you are trying to delete does not exist.');
    }
    
}
