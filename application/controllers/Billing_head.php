<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Billing_head extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        if (!$this->ion_auth->logged_in())
        {
            // redirect them to the login page
            redirect('auth/login', 'refresh');
        }
        $this->load->model('Billing_head_model');
        $this->load->model('Society_model');
        $this->load->model('Flat_type_model');
        
    } 

    /*
     * Listing of billing_heads
     */
    function view_billing_head()
    {

        $data = array(
            'title' => "Billing Head"
        );
        $flat_type_id = $this->uri->segment(4);
        $data['flat_details'] = $this->Flat_type_model->get_flat_type($flat_type_id);
        
        $data['billing_heads'] = $this->Billing_head_model->get_all_billing_heads($flat_type_id);
        
        $data['_view'] = 'billing_head/index';
        $this->load->view('societies/society_actions/flat_types_details',$data);
    }

    /*
     * Adding  society flat type bill head  update - sachhidanand
     */
    function add_billing_head()
    {   
        
        $flat_type_id = $this->uri->segment(4);
        $data = array(
            'title' => "Billing Head"
        );
        $this->load->library('form_validation');

		$this->form_validation->set_rules('billing_head_name','Name','required');
        $this->form_validation->set_rules('bill_head_amount','Amount','required'); 

		if($this->form_validation->run())     
        {   
            
            $params = array(
                'society_id' => $this->input->post('society_id'),
                'is_unit_value' =>($this->input->post('is_unit_value')?$this->input->post('is_unit_value'):0),
                // 'gst_applicable' =>($this->input->post('gst_applicable')?$this->input->post('gst_applicable'):0),
                'flat_type_id' => $this->input->post('flat_type_id'),               
                'name' => $this->input->post('billing_head_name'),
                'amount' =>abs($this->input->post('bill_head_amount')) ,
                'created_at' => date("Y-m-d H:i:s"),
            ); 
           
            $check_flat_type_bill=$this->Billing_head_model->flat_type_bill($this->input->post('billing_head_name'),$this->input->post('flat_type_id'), $this->input->post('society_id'));
           
            if($check_flat_type_bill==0){                 
                if($billing_head_id = $this->Billing_head_model->add_billing_head($params)){

                    //checking society accounting present or not
                    $accounting_db_details=$this->Society_model->get_society_accounting_details($this->input->post('society_id'));
		            if(!empty($accounting_db_details)){
                        $bill_head_ledger_id=$this->ledger->get_ledger($this->input->post('billing_head_name'),"Bill Head",$this->input->post('society_id'),"sc_bill_head_accounting_details");
                        if($bill_head_ledger_id==0){

                            $get_group_id=$this->Billing_head_model->get_bill_group_id($this->input->post('billing_head_name'));
                            // As discuss jignesh sir and harsh changes -01-03-2021 
                           
                            $dc="C";
                            $bill_head_ledger_id=$this->ledger->create_ledger($this->input->post('billing_head_name'),"Bill Head",$this->input->post('society_id'),"sc_bill_head_accounting_details",0,$get_group_id,$dc,0); 
    
                            $message['text'] = "Billing Head added successfully!!";
                            $message['status'] = "Success";
                            $this->session->set_flashdata('message', $message);
                            redirect('billing_head/view'.'/'.$params['society_id'].'/'.$params['flat_type_id']);
                        }else{
                            $message['text'] = "Billing Head added successfully";
                            $message['status'] = "Success";
                            $this->session->set_flashdata('message', $message);
                            redirect('billing_head/view'.'/'.$params['society_id'].'/'.$params['flat_type_id']);
                        }  
                    }else{
                        $message['text'] = "Billing Head added successfully!!";
                        $message['status'] = "Success";
                        $this->session->set_flashdata('message', $message);
                        redirect('billing_head/view'.'/'.$params['society_id'].'/'.$params['flat_type_id']);
                    } 
                                     
                }
                else{
                    $message['text'] = "Please Check Your Input!!";
                    $message['status'] = "Fail";
                    $this->session->set_flashdata('message', $message);
                    redirect('billing_head/view'.'/'.$params['society_id'].'/'.$params['flat_type_id']);
                }
            }else{
                $message['text'] = "Already Exit Flat Type Bill Head!!";
                $message['status'] = "Fail";
                $this->session->set_flashdata('message', $message);
                redirect('billing_head/view'.'/'.$params['society_id'].'/'.$params['flat_type_id']);
            }          
           
        }
        else
        {
            $bill_head = $this->Billing_head_model->get_all_bill_head_master(1);       
            if($this->session->userdata("role")=="CA"){           
                $user_id=$this->session->userdata('user_id');
                $ca_bill_head= $this->Billing_head_model->get_all_bill_head_master($user_id);
                $bill_head =array_merge($bill_head,$ca_bill_head);
               
            }   
            
            $bill_key = array();
            foreach ($bill_head as $key => $row)
            {
                $bill_key[$key] = $row['bill_head_id'];
            }
            array_multisort($bill_key, SORT_DESC, $bill_head);            
            $data['bill_head_details'] =$bill_head ;
			// $data['all_billing_heads'] = $this->Billing_head_model->get_all_billing_heads($flat_type_id);
           
            $data['_view'] = 'billing_head/add';
            $this->load->view('societies/society_actions/add_billing_heads',$data);
        }
    }  

    /*
     * Editing  society flat type bill head -sachhidaand
     */
    function edit_billing_head($society_id='',$flat_types_id='',$id = '')
    {   
        $data = array(
            'title' => "Billing Head"
        );
        
        if($id == ''){
            $id = $this->input->post('billing_head_id');
        }       
       
        $flat_type_id = $this->uri->segment(4);
        // check if the billing_head exists before trying to edit it
        $data['billing_head'] = $this->Billing_head_model->get_billing_head($id);
        
        if(isset($data['billing_head']['id']))
        {
            $this->load->library('form_validation');
			$this->form_validation->set_rules('billing_head_name','Name','required');
            $this->form_validation->set_rules('bill_head_amount','Amount','required');
		
			if($this->form_validation->run())     
            {   
                
                $params = array(
					'society_id' => $this->input->post('society_id'),
					'is_unit_value' =>($this->input->post('is_unit_value') ?$this->input->post('is_unit_value') :0 ),
					'flat_type_id' => $this->input->post('flat_type_id'),
					'name' => ltrim(rtrim($this->input->post('billing_head_name'))),
					'amount' => $this->input->post('bill_head_amount'),
                    // 'gst_applicable' => ($this->input->post('gst_applicable') ?$this->input->post('gst_applicable') :0 ),					
					'updated_at' => date("Y-m-d H:i:s"),
                );

                if($this->Billing_head_model->update_billing_head($id,$params)){
                    //checking society accounting present or not
                    $accounting_db_details=$this->Society_model->get_society_accounting_details($this->input->post('society_id'));
                    if(!empty($accounting_db_details)){                   

                        $bill_head_ledger_id=$this->ledger->get_ledger($this->input->post('billing_head_name'),"Bill Head",$this->input->post('society_id'),"sc_bill_head_accounting_details");
                        if($bill_head_ledger_id==0){
                            $get_group_id=$this->Billing_head_model->get_bill_group_id($this->input->post('billing_head_name'));

                            // $bill_head_ledger_id=$this->ledger->create_ledger($this->input->post('billing_head_name'),"Bill Head",$this->input->post('society_id'),"sc_bill_head_accounting_details",0,$get_group_id,"C",0);
                            
                            $dc="C";
                            $bill_head_ledger_id=$this->ledger->create_ledger($this->input->post('billing_head_name'),"Bill Head",$this->input->post('society_id'),"sc_bill_head_accounting_details",0,$get_group_id,$dc,0);
                            
                            $message['text'] = "Billing Head updated successfully!!";
                            $message['status'] = "Success";
                            $this->session->set_flashdata('message', $message);
                            redirect('billing_head/view'.'/'.$params['society_id'].'/'.$params['flat_type_id']);

                        }else{
                            $message['text'] = "Billing Head updated successfully";
                            $message['status'] = "Success";
                            $this->session->set_flashdata('message', $message);
                            redirect('billing_head/view'.'/'.$params['society_id'].'/'.$params['flat_type_id']);
                        }
                    }else{
                        $message['text'] = "Billing Head updated successfully";
                        $message['status'] = "Success";
                        $this->session->set_flashdata('message', $message);
                        redirect('billing_head/view'.'/'.$params['society_id'].'/'.$params['flat_type_id']);
                    }
                   
                }
                else
                {
                    $message['text'] = "Please Check Your Input!!";
                    $message['status'] = "Fail";
                    $this->session->set_flashdata('message', $message);
                    redirect('billing_head/view'.'/'.$params['society_id'].'/'.$params['flat_type_id']);
                };
            }
            else
            {	
                //get bill head master table
                $bill_head = $this->Billing_head_model->get_all_bill_head_master(1);
                //get bill head who create CA
                if($this->session->userdata("role")=="CA"){           
                    $user_id=$this->session->userdata('user_id');
                    $ca_bill_head= $this->Billing_head_model->get_all_bill_head_master($user_id);
                    $bill_head =array_merge($bill_head,$ca_bill_head);
                
                }   
                
                $bill_key = array();
                foreach ($bill_head as $key => $row)
                {
                    $bill_key[$key] = $row['bill_head_id'];
                }
                array_multisort($bill_key, SORT_DESC, $bill_head);
                $data['bill_head_details']=$bill_head;               
                             
                $data['_view'] = 'billing_head/edit';
                $this->load->view('societies/society_actions/edit_flat_types_details',$data);
            }
        }
        else
            show_error('The billing_head you are trying to edit does not exist.');
    } 


    /*
     * Deleting master  billing head
     */
    function delete_master_bill_head($id)
    {
       
        $billing_head = $this->Billing_head_model->get_master_billing_head($id);
       
        // check if the billing_head exists before trying to delete it
        if(isset($billing_head['bill_head_id']) && !empty($billing_head['bill_head_id']))
        { 
            
            $billing_head = $this->Billing_head_model->exist_billing_head_in_society($billing_head['bill_head_name']);
           
            if(!empty( $billing_head)){
                echo "0";
            }else{
               
                $this->Billing_head_model->delete_master_billing_head($id);
                echo "1";
            }  
                
        }
        else{            
            echo "0";
        }
            //show_error('The billing_head you are trying to delete does not exist.');
           
    }

    /*
     * Deleting flat type  billing_head
     */
    function remove($id)
    {
        $billing_head = $this->Billing_head_model->get_billing_head($id);
        
        // check if the billing_head exists before trying to delete it
        if(isset($billing_head['id']) && !empty($billing_head['id']))
        { 
           
            $society_id=$billing_head['society_id'];
           
            $bill_ledger_details=$this->ledger->get_bill_details($society_id,$billing_head['id'],$billing_head['name']);            
            //add method check ledger entry preset or not - 08-02-2021
            $bill_ledger_delete=$this->ledger->ledger_delete($society_id,$bill_ledger_details->ledger_id); 
           
            if($bill_ledger_delete=="0"){
                $this->Billing_head_model->delete_billing_head($id);
                redirect('billing_head/view/'.$billing_head['society_id']."/".$billing_head['flat_type_id']);
    
            }else{
                show_error('The billing_head you are trying to delete does not exist.');
            }
            
        }
        else
            show_error('The billing_head you are trying to delete does not exist.');
            //redirect('billing_head/view_billing_head/'.$billing_head['flat_type_id']);view_bill_head_master
    }

    //  add/edit bill head master 20-01-2021-sachhidanand
    public function view_bill_head_master()
	{
		
		$data = array(
			'title' => "Bill Head"
		);

        // if ($this->ion_auth->is_admin()){
        //     $bill_head = $this->Billing_head_model->get_all_bill_head_master(1);
        // }else{
        //     $bill_head = $this->Billing_head_model->get_all_bill_head_master(1);	
        //     $user_id=$this->session->userdata('user_id');
        //     $ca_bill_head= $this->Billing_head_model->get_all_bill_head_master($user_id);
        //     $bill_head =array_merge($bill_head,$ca_bill_head);
        // }
      
        $bill_head = $this->Billing_head_model->get_all_bill_head_master();
        
        
        $bill_key = array();
        foreach ($bill_head as $key => $row)
        {
            $bill_key[$key] = $row['bill_head_id'];
        }
        array_multisort($bill_key, SORT_DESC, $bill_head);
        
        $data['bill_head_list']=$bill_head;
		
        $data['_view'] = 'billing_head/index';
        $this->load->view('societies/society_actions/bill_head_master_list',$data);

	}
    //add edit bill head master
    function add_edit_bill_head()
    {   
        
        $data = array(
            'title' => "Billing Head"
        );
       
        $this->load->library('form_validation');

        $this->form_validation->set_rules('billing_head_name','Name','required');
        $this->form_validation->set_rules('billing_head_category_id','Bill Head Category','required');
        if($this->form_validation->run())     
        {   
            $user_id=$this->session->userdata("user_id");
           
            $bill_id=$this->input->post('bill_head_id');
            if($bill_id==0)
                $bill_head_category = $this->Billing_head_model->exist_billing_head(trim($this->input->post('billing_head_name')));
            else
                $bill_head_category =0;           
            
            
            if($bill_head_category==0){
                $bill_cat_id=$this->input->post('billing_head_category_id');
                $bill_head_category = $this->Billing_head_model->get_bill_head_category($bill_cat_id);
                
                $params = array(                
                    'bill_head_name' => trim($this->input->post('billing_head_name')),
                );
                if(!empty($bill_head_category->parent_id)){
                    $params["bill_head_category_id"]=$bill_head_category->parent_id;
                    $params["ref_group_id"]=$bill_head_category->bill_head_category_id;
                }else{
                    $params["bill_head_category_id"]=$bill_head_category->bill_head_category_id;
                    $params["ref_group_id"]=$bill_head_category->bill_head_category_id;
                }
                if(!empty($bill_head_category->parent_name)){
                    $params["acc_grp_name"]=$bill_head_category->parent_name;
                    $params["acc_sub_grp_name"]=$bill_head_category->bill_head_category_name;
                }else{
                    $params["acc_grp_name"]=$bill_head_category->bill_head_category_name;
                    $params["acc_sub_grp_name"]=$bill_head_category->bill_head_category_name;
                }

                if($bill_id==0){
                    $params["created_by"]=$user_id;
                }else{
                    $params["updated_by"]=$user_id;
                }
                
                $billing_head=$this->Billing_head_model->add_edit_bill_head_master($bill_id,$params);
                
                if($billing_head!=0){
                    if($billing_head==2)
                        $message['text'] = "Billing Head updated successfully!!";
                    else
                        $message['text'] = "Billing Head Insert successfully!!";
                    $message['status'] = "Success";
                   
                                 
                }
                else
                {
                    $message['text'] = "Please Check Your Input!!";
                    $message['status'] = "Fail";
                  
                 
                };

            }else{
                $message['text'] = "BillHead Already Available";
                $message['status'] = "Fail";
            }
            $this->session->set_flashdata('message', $message);
            redirect('bill_head_master');  
            
        }
        else
        {       
            $bill_head_id=$this->uri->segment(3);
            if(!empty($bill_head_id)){
                $data['bill_head'] = $this->Billing_head_model->get_bill_head($bill_head_id);
            }else{
                $data['bill_head'] =array("bill_head_id"=>0);
            }                
            
            $data['bill_head_category'] = $this->Billing_head_model->get_bill_head_category();
            $this->load->view('societies/society_actions/add_edit_bill_head',$data);
            
        }
       
    } 

    
}
