<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Expense extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        if (!$this->ion_auth->logged_in())
        {
            // redirect them to the login page
            redirect('auth/login', 'refresh');
        }
        $this->load->model('Expense_model');
        $this->load->model('Bank_model');
        $this->load->model('Society_model');
        $this->load->model('Service_provider_model');
        $this->load->model('Bank_transaction_model');        
        $this->load->model('Expense_category_model');
    } 

    /*
     * Listing of expenses
     */
    function view_expence()
    {
        $data = array();
        $society_id = $this->uri->segment(3);
        $society = $this->Society_model->get_society_details($society_id);
        $expenses = $this->Expense_model->get_all_expense($society_id);
       
        $data['title'] = $society[0]->name.' '."Expenses";
        $data['expenses'] = $expenses;
        $data['_view'] = 'expense/index';
        $this->load->view('societies/commercials/view_expence', $data);
    }

    /*
     * Adding a new expense for bill received but unpaid
     */
    
    function add_expense_bill()
    {
         $data = array(
            'title' => "Societies"
        );
        $society_id = $this->uri->segment(3);
        $this->load->library('form_validation');		
        $this->form_validation->set_rules('expense_category_id','Expense Category Id','required');
		$this->form_validation->set_rules('service_provider_id','Service Provider Id','required');       
		$this->form_validation->set_rules('expense_amount','Amount','required');
		$this->form_validation->set_rules('expense_description','Description','required');
		
		if($this->form_validation->run())     
        {
            
            $society_id = $this->input->post('society_id');            
            $amount = $this->input->post('expense_amount');                
            $description = $this->input->post('expense_description');
            $payment_date = date("Y-m-d",strtotime($this->input->post('expense_date')));
            
            $provider_id = $this->input->post('service_provider_id');
            //get provider name           
            $get_provider=$this->Expense_model->get_provider($provider_id);
            $payee=$get_provider["name"];

            $param = array(
                'expense_category_id' => $this->input->post('expense_category_id'),
                'society_id' => $this->input->post('society_id'),
                'service_provider_id' => $this->input->post('service_provider_id'),
                'bank_id' => $this->input->post('bank_id'),
                'date' => $payment_date,
                'payee' => $payee,
                'amount' => $this->input->post('expense_amount'),
                'description' => $this->input->post('expense_description'),
                'created_at' => date('Y-m-d'),
                "status"=>"Unpaid"
            );
            $expense_id = $this->Expense_model->add_expense($param);
            if(!empty($expense_id)){
                //checking society accounting details present or not-03-03-2022
				$accounting_db_details=$this->Society_model->get_society_accounting_details($society_id);
                //expense accounting entry 						
                if(!empty($accounting_db_details)){
                    
                    $narration=$this->input->post('expense_description'); 

                    $check_provider_ledger_id=$this->ledger->get_ledger("vendor","vendor",$society_id,"sc_vendor_pay_accounting_details",$provider_id);
                    if($check_provider_ledger_id==0){
                        $ledger_name=$get_provider["name"].'-'.$get_provider['sp_type']."-".$get_provider['contact_no'];
                        $check_provider_ledger_id=$this->ledger->create_ledger($ledger_name,"vendor",$society_id,"sc_vendor_pay_accounting_details",0,24,"D",$provider_id);
                    }                 

                    $expense_categorie = $this->input->post('expense_category_id');
                    $check_exp_category_ledger_id=$this->ledger->get_ledger($expense_categorie,'expense_category',$society_id,"sc_exp_category_accounting_details",0);
                    if($check_exp_category_ledger_id==0){
                        $check_exp_category_ledger_id=$this->ledger->create_ledger($expense_categorie,"expense_category",$society_id,"sc_exp_category_accounting_details",0,21,"D");
                    }                

                    $accouting_expense=$this->ledger->accounting_double_entry($society_id,4,$payment_date,$narration,$amount,$check_exp_category_ledger_id,$check_provider_ledger_id);
                    if($accouting_expense!="0"){

                        $this->Expense_model->update_expense($expense_id,array("expense_entry_id"=>$accouting_expense));
                        $message['status'] = 'Success';
                        $message['text'] = 'Expense added successfully!!';
                    }else{
                        $message['status'] = 'Fail';
                        $message['text'] = 'Msociety accounting added unsuccessfully!!';
                    }                  
                           
                }else{
                    $message['status'] = 'Fail';
                    $message['text'] = 'Accounting added unsuccessfully!!';
                }                  
                    
                
                $this->session->set_flashdata('message', $message);//add this line for show message in toaster -09-10-2021
                redirect('expense/view'.'/'.$society_id);
            }else{
                $message['status'] = 'Fail';
                $message['text'] = 'Expense Added Unsuccessfully!!';
                $this->session->set_flashdata('message', $message);//add this line for show message in toaster -09-10-2021                
                redirect('expense/view'.'/'.$society_id);
            } 
        }
        else
        {
			
			$data['all_expense_categories'] = $this->Expense_category_model->get_all_expense_categories();

			$data['all_service_providers'] = $this->Service_provider_model->get_all_service_providers($society_id);	
			
            $data['_view'] = 'expense/add'.'/'.$society_id;
            $this->load->view('societies/commercials/add_expence', $data);
        }
    }  

    function get_service_provider()
    {
        $provider_id=$this->input->post("provider");
        $service_provider = $this->Service_provider_model->get_service_provider($provider_id);
        echo json_encode($service_provider);
    }

    /*
     * Adding a expense Payment
     */
    function expense_payment($society_id=0,$expense_id=0)
    {
        $data = array(
            'title' => "Societies"
        );
        if($society_id==0){
            $society_id = $this->input->post('society_id'); 
        }
        if($expense_id==0){
            $expense_id = $this->input->post('expense_id'); 
        }
        $data['expense_details'] =$expense_details= $this->Expense_model->get_expense($expense_id);
        
        $this->load->library('form_validation');		
        // $this->form_validation->set_rules('bank_id','Bank','required');		
		$this->form_validation->set_rules('expense_description','Description','required');		
		
		if($this->form_validation->run())     
        {  
            $description = $this->input->post('expense_description');                
            $payment_mode=$this->input->post('payment_mode');
            $payment_date = date("Y-m-d",strtotime($this->input->post('payment_date')));
           
            $amount = $expense_details["amount"];  
            $provider_id=$expense_details["service_provider_id"];         
            $expense_param=array("status"=>"Paid");
            if($payment_mode=="cash"){
                $last_transaction = $this->Bank_transaction_model->get_transaction_by_society($society_id);
                
		        $last_balance = $last_transaction[0]['balance'];
                $credit_ledger_id=$this->ledger->get_ledger("Cash Book","Cash Book",$society_id,"sc_acc_details",0);

                $transaction_params['is_cash'] = 1;
            }else{
                $bank_id = $this->input->post('bank_id');
                $bank = $this->Bank_model->get_bank($bank_id);
                $credit_ledger_id=$this->ledger->get_ledger("bank","bank",$society_id,"sc_bank_acc_details",$bank_id); 

                $last_bank_transaction=$this->Bank_transaction_model->get_transaction_by_bank_arrear_society($bank_id, $society_id);
               
                $last_balance = $last_bank_transaction != NULL ? $last_bank_transaction[0]['balance'] : $bank['current_balance'];
                $expense_param['bank_id']=$bank_id;

                $transaction_params['balance'] = $last_balance != NULL ? $last_balance - $amount : $bank['current_balance'] - $amount;
                $transaction_params['is_cash'] = 0;
                $transaction_params['bank_id'] = $bank_id;
                $expense_param['expense_cheque_no'] = $this->input->post('cheque_no');
            }

            $transaction_params['debit'] = $amount;
            $transaction_params['society_id'] = $society_id;
            $transaction_params['narration'] = "Expense - ". $description;
            $transaction_params['date'] = $payment_date;
            $transaction_params['expense_id'] = $expense_details['id'];
            if($amount < $last_balance || $amount == $last_balance){

                //checking society accounting details present or not-03-03-2022
                $accounting_db_details=$this->Society_model->get_society_accounting_details($society_id);$accounting_expense=0;						
                if(!empty($accounting_db_details)){
                    //vendor or category expense accounting entry 
                    $narration=$this->input->post('expense_description');
                    
                    $check_provider_ledger_id=$this->ledger->get_ledger("vendor","vendor",$society_id,"sc_vendor_pay_accounting_details",$provider_id);                    
                    if($check_provider_ledger_id==0){
                        $get_provider=$this->Expense_model->get_provider($provider_id);                       
                        $ledger_name=$get_provider["name"].'-'.$get_provider['sp_type']."-".$get_provider['contact_no'];
                        $check_provider_ledger_id=$this->ledger->create_ledger($ledger_name,"vendor",$society_id,"sc_vendor_pay_accounting_details",0,24,"D",$provider_id); 
                                   
                    }                   
                    $accounting_expense=$this->ledger->accounting_double_entry($society_id,2,$payment_date,$narration,$amount,$check_provider_ledger_id,$credit_ledger_id);                     
                    
                    if($accounting_expense!="0"){
                        $expense_param["updated_at"]=date("Y-m-d H:i:s");
                        $this->Expense_model->update_expense($expense_details['id'],$expense_param); 
                        if($payment_mode=="cash"){
                            $transaction_params['balance'] = $last_balance != NULL ? $last_balance - $amount : $last_balance - $amount ; 
                        }
                        $this->Bank_transaction_model->add_bank_transaction($transaction_params);
                       
        
                        if($payment_mode=="bank"){
                            $ban['current_balance'] = $last_balance != NULL ? $last_balance - $amount : $bank['current_balance'] - $amount;               
                            $this->Bank_model->update_bank($bank_id,$ban);
                        }
                       
                        $message['text'] = "Expense Payment Done!!";
                        $message['status'] = "Success";
                        
                    }else{
                        $message['text'] = "Expense Payment Failed";
                        $message['status'] = "Fail";
                        
                    }
                }                
                $this->session->set_flashdata('message', $message);
                redirect('expense/view'.'/'.$society_id);

            }else{
                $message['status'] = 'Fail';
                $message['text'] = 'Insufficient amount in bank and cash in hand!!';
                $this->session->set_flashdata('message', $message);//add this line for show message in toaster -09-10-2021                
                redirect('expense/view'.'/'.$society_id);
            }
        }
        else
        {
			
			$data['all_expense_categories'] = $this->Expense_category_model->get_all_expense_categories();
           
			$data['all_service_providers'] = $this->Service_provider_model->get_all_service_providers($society_id);
           			
			$data['all_banks'] = $this->Bank_model->get_all_bank($society_id);
            
            $data['_view'] = 'expense/expense_payment'.'/'.$society_id;
            $this->load->view('societies/commercials/expence_payment', $data);
        }
    }
    
    function expense_payment_bak($society_id=0,$expense_id=0)
    {
        $data = array(
            'title' => "Societies"
        );
        $data['expense_details'] =$expense_details= $this->Expense_model->get_expense($expense_id);
        
        $this->load->library('form_validation');		
        // $this->form_validation->set_rules('bank_id','Bank','required');		
		$this->form_validation->set_rules('expense_description','Description','required');		
		
		if($this->form_validation->run())     
        {  
            
            $society_id = $this->input->post('society_id');            
            if(!empty($this->input->post('service_provider_id'))|| !empty($this->input->post('expense_category_id'))){ 
                $amount = $this->input->post('expense_amount');
                $bank_id = $this->input->post('bank_id');
                $description = $this->input->post('expense_description');
                $payment_date = $this->input->post('expense_date');

                $bank = $this->Bank_model->get_bank($bank_id);
                $bank_ledger_id=$this->ledger->get_ledger("bank","bank",$society_id,"sc_bank_acc_details",$bank_id); 

                $provider_id = $this->input->post('service_provider_id');
                //get provider name
                if(!empty($this->input->post('service_provider_id'))){
                    $get_provider=$this->Expense_model->get_provider($provider_id);
                    $payee=$get_provider["name"];
                }else{
                    $payee='';
                }
                          
                // $last_cash_transaction = $this->Bank_transaction_model->get_transaction_by_society($society['id']);
                // $last_cash_balance = $last_cash_transaction != NULL ? $last_cash_transaction[0]['balance'] : 0;

                $last_bank_transaction =$this->Bank_transaction_model->get_transaction_by_bank_arrear_society($bank_id, $society_id);
                $last_bank_balance = $last_bank_transaction != NULL ? $last_bank_transaction[0]['balance'] : $bank['current_balance'];

                if($amount < $last_bank_balance || $amount == $last_bank_balance):
                    $params['debit'] = $amount;
                    $params['balance'] = $last_bank_balance != NULL ? $last_bank_balance - $amount : $bank['current_balance'] - $amount;
                    $params['is_cash'] = 0;
                    $params['bank_id'] = $bank_id;
                    $params['society_id'] = $society_id;
                    $params['narration'] = "Expense - ". $description;
                    $params['date'] = $payment_date;
                    if($this->Bank_transaction_model->add_bank_transaction($params)):
                        $ban['current_balance'] = $last_bank_balance != NULL ? $last_bank_balance - $amount : $bank['current_balance'] - $amount;
                        $id = $bank_id;
                        $sb = $this->Bank_model->update_bank($id, $ban);
                        $param = array(
                            'expense_category_id' => $this->input->post('expense_category_id'),
                            'society_id' => $this->input->post('society_id'),
                            'service_provider_id' => $this->input->post('service_provider_id'),
                            'bank_id' => $this->input->post('bank_id'),
                            'date' => $this->input->post('expense_date'),
                            'payee' => $payee,
                            'amount' => $this->input->post('expense_amount'),
                            'description' => $this->input->post('expense_description'),
                            'created_at' => date('Y-m-d'),
                        );
                        $expense_id = $this->Expense_model->add_expense($param);

                        //checking society accounting details present or not-03-03-2022
						$accounting_db_details=$this->Society_model->get_society_accounting_details($society_id);							
                    	if(!empty($accounting_db_details)){
                            //vendor or category expense accounting entry 
                            $narration=$this->input->post('expense_description'); 
                            if(!empty($this->input->post('service_provider_id'))){
                                $check_provider_ledger_id=$this->ledger->get_ledger("vendor","vendor",$society_id,"sc_vendor_pay_accounting_details",$provider_id);
                                if($check_provider_ledger_id==0){
                                    $ledger_name=$get_provider["name"].'-'.$get_provider['sp_type'];
            
                                    $new_vendor_ledger=$this->ledger->create_ledger($ledger_name,"vendor",$society_id,"sc_vendor_pay_accounting_details",0,24,"D",$provider_id);
            
                                    $this->ledger->accounting_double_entry($society_id,2,date('Y-m-d'),$narration,$this->input->post('expense_amount'),$new_vendor_ledger,$bank_ledger_id);
                                }else{                       
                                    $this->ledger->accounting_double_entry($society_id,2,date('Y-m-d'),$narration,$this->input->post('expense_amount'),$check_provider_ledger_id,$bank_ledger_id);           
                                } 
                            }else{
                                $expense_categorie = $this->input->post('expense_category_id');
                                $check_exp_category_ledger_id=$this->ledger->get_ledger($expense_categorie,'expense_category',$society_id,"sc_exp_category_accounting_details",0);
                                if($check_exp_category_ledger_id==0){
                                    $new_exp_category_ledger=$this->ledger->create_ledger($expense_categorie,"expense_category",$society_id,"sc_exp_category_accounting_details",0,21,"D");
                                    
                                    $this->ledger->accounting_double_entry($society_id,2,date('Y-m-d'),$narration,$amount,$new_exp_category_ledger,$bank_ledger_id);
                                    
                                }else{
                                    $this->ledger->accounting_double_entry($society_id,2,date('Y-m-d'),$narration,$amount,$check_exp_category_ledger_id,$bank_ledger_id);
                                    
                                }
                            }
                            //end vendor entry//
                        }
                       
                    
                        $message['status'] = 'Success';
                        $message['text'] = 'Expense added successfully!!';
                        $this->session->set_flashdata('message', $message);//add this line for show message in toaster -09-10-2021
                        redirect('expense/view'.'/'.$society_id);
                    endif;
                else:
                    $message['status'] = 'Fail';
                    $message['text'] = 'Expense amount should be less than bank amount!!';
                    $this->session->set_flashdata('message', $message);//add this line for show message in toaster -09-10-2021
                    redirect('expense/view'.'/'.$society_id);
                endif;
            }else{
                $message['status'] = 'Fail';
                $message['text'] = 'Insufficient amount in bank and cash in hand!!';
                $this->session->set_flashdata('message', $message);//add this line for show message in toaster -09-10-2021                
                redirect('expense/view/'.$society_id);
            }    


        }
        else
        {
			
			$data['all_expense_categories'] = $this->Expense_category_model->get_all_expense_categories();
           
			$data['all_service_providers'] = $this->Service_provider_model->get_all_service_providers($society_id);
           			
			$data['all_banks'] = $this->Bank_model->get_all_bank($society_id);
            
            $data['_view'] = 'expense/expense_payment'.'/'.$society_id;
            $this->load->view('societies/commercials/edit_expence', $data);
        }
    } 

    /*
     * Editing a expense
     */
    function edit_expense($society_id=0,$expense_id=0)
    {
         $data = array(
            'title' => "Societies"
        ); 

        if($society_id==0){
            $society_id = $this->input->post('society_id'); 
        }
        if($expense_id==0){
            $expense_id = $this->input->post('expense_id'); 
        }
        $data['expense_details'] =$expense_details= $this->Expense_model->get_expense($expense_id);
        
        // check if the expense exists before trying to edit it
        $data['expense'] = $this->Expense_model->get_expense($expense_id);
        
        // if(isset($data['expense']['id']))
        // {
            $this->load->library('form_validation');

			
			$this->form_validation->set_rules('expense_amount','Amount','required');
			// print_r($this->form_validation->run());die;
			if($this->form_validation->run())     
            {   

              
                $check_provider_ledger_id=$this->ledger->get_ledger("vendor","vendor",$society_id,"sc_vendor_pay_accounting_details",$data['expense_details']['service_provider_id']);             

                $expense_categorie = $this->input->post('expense_category_id');

                $check_exp_category_ledger_id=$this->ledger->get_ledger($expense_categorie,'expense_category',$society_id,"sc_exp_category_accounting_details",0);
                $main_array=array();
                $debit=array("dc"=>"D","dr_amount"=>$this->input->post('expense_amount'), "ledger_id"=>$check_exp_category_ledger_id);
                array_push($main_array,$debit);               
                $credit =array( "dc"=>"C","cr_amount"=>$this->input->post('expense_amount'),"ledger_id"=>$check_provider_ledger_id);
                array_push($main_array,$credit);

                $entry_id=$this->ledger->accounting_bill_double_entry_update($society_id,4,date("Y-m-d",strtotime($data['expense_details']['created_at'])),$data['expense_details']['description'],$main_array,$data['expense_details']['expense_entry_id']);
                if($entry_id=="1"){
                    $params = array(					
                        'amount' => $this->input->post('expense_amount'),				
                        'updated_at' => date("Y-m-d H:i:s"),
                    );    
                    $this->Expense_model->update_expense( $expense_id,$params); 
                    
                    $message['status'] = 'Success';
                    $message['text'] = 'Expense Update successfully!!';
                   
                }else{
                    $message['status'] = 'Fail';
                    $message['text'] = 'Expense Update Unsuccessfully!!';
                   
                }
                $this->session->set_flashdata('message', $message);
                redirect('expense/view/'. $society_id);
            }
            else
            {
                // die("476");
				
                $data['all_expense_categories'] = $this->Expense_category_model->get_all_expense_categories();
           
                $data['all_service_providers'] = $this->Service_provider_model->get_all_service_providers($society_id);
                        
                $data['all_banks'] = $this->Bank_model->get_all_bank($society_id);
                
                
                $data['_view'] = 'expense/edit_expence'.'/'.$society_id."/".$expense_id;
                $this->load->view('societies/commercials/edit_expence', $data);



            }
        // }
        // else
        //     show_error('The expense you are trying to edit does not exist.');
    } 

    /*
     * Deleting expense
     */
    function remove($id)
    {
        $expense = $this->Expense_model->get_expense($id);

        // check if the expense exists before trying to delete it
        if(isset($expense['id']))
        {
            $this->Expense_model->delete_expense($id);
            redirect('expense/view');
        }
        else
            show_error('The expense you are trying to delete does not exist.');
    }

    
    
}
